window.indexedDB = window.moz_indexedDB;
console.log("Trying to open database ...");
var request = window.indexedDB.open("BookShop", "My Book Shop database");

function ensureIndex(store, name, property, callback) {
  console.log(name, property);
  var indexNames = store.indexNames;
  for(var i = 0; i < indexNames.length; i++) {
    if(indexNames[i] === name) {
      callback();
      return;
    }
  }
  var request = store.createIndex(name, property, false);
  request.onsuccess = function() {
    callback();
  };
}

function ensureIndexes(store, props, callback) {
  persistence.asyncForEach(props, function(prop, callback) {
      ensureIndex(store, prop, prop, callback);
    }, callback);
}

function openOrCreate(db, storeName, callback) {
  var allStores = db.objectStoreNames;

  var store = null;

  for(var i = 0; i < allStores.length; i++) {
    if(storeName === allStores[i]) {
      store = db.objectStore(storeName, 0);
      callback(store);
      return;
    }
  }

  db.createObjectStore(storeName, "_internal_id", true).onsuccess = function(event) {
    //indexedDB.makeSingleKeyRange("zef")
    callback(event.result);
  };
}

request.onsuccess = function(event){
  var db = event.result;
  window.db = db;
  console.log("Database Opened", db);
  openOrCreate(db, "User8", function(store) {
      console.log(store);
      ensureIndexes(store, ["date", "id", "done"], function() {
          var datas = [];
          console.log("Alright then!");
          for(var i = 0; i < 20; i++) {
            datas.push({name: "Item" + i, date: new Date(), done: i % 2 === 0, id: persistence.createUUID()});
          }
          persistence.asyncForEach(datas, function(item, callback) {
              var request = store.add(item);
              request.onsuccess = function(event) {
                callback();
              }
              request.onerror = function(event) {
                console.log("bla", event.message);
                db.removeObjectStore("User8");
              }
            }, function() {
              var idx = store.index("id");
              var request = idx.openObjectCursor();
              request.onsuccess = function(event) {
                if(!event.result) {
                  console.log("Removing");
                  db.removeObjectStore("User8");
                  return;
                }
                var cur = event.result;
                console.log(JSON.stringify(cur.value));
                cur.continue();
              };
            });
        });
        /*
        store.getAll().onsuccess = function(event){
          var all = event.result;
          all.forEach(function(e) {
              console.log(JSON.stringify(e));
            });
        };
        */
    });
  
};

