// Run with RingoJS: http://ringojs.org
// Set path below to AppEngine Java SDK path
var appEngineSdkPath = '/Users/zef/Software/appengine-java-sdk';

addToClasspath(appEngineSdkPath + "/lib/impl/appengine-api-stubs.jar");
addToClasspath(appEngineSdkPath + "/lib/impl/appengine-api.jar");
addToClasspath(appEngineSdkPath + "/lib/impl/appengine-api-labs.jar");
addToClasspath(appEngineSdkPath + "/lib/impl/appengine-api-stubs.jar");
addToClasspath(appEngineSdkPath + "/lib/testing/appengine-testing.jar");

var persistence = require('../../lib/persistence').persistence;
var persistenceStore = require('../../lib/persistence.store.appengine');
var eventloop = require('./eventloop');
var assert = require("assert");

var JLocalDatastoreServiceTestConfig = com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig;
var JLocalServiceTestHelper = com.google.appengine.tools.development.testing.LocalServiceTestHelper;

var helper = new JLocalServiceTestHelper(new JLocalDatastoreServiceTestConfig());

helper.setUp();

persistenceStore.config(persistence);

var asyncDS = com.google.appengine.api.datastore.DatastoreServiceFactory.getAsyncDatastoreService();
var obj = new com.google.appengine.api.datastore.Entity("User", "zef");
obj.setProperty("name", "Zef");

var urlFetchService = com.google.appengine.api.urlfetch.URLFetchServiceFactory.getURLFetchService();

var url = new java.net.URL("http://zef.me");
var url2 = new java.net.URL("http://www.mobl-lang.org");
var url3 = new java.net.URL("http://persistencejs.org");

java.lang.Thread.sleep(2000);
print("Go!");

eventloop.queue(urlFetchService.fetchAsync(url), function(res) {
    print("Fetched: " + url);
});

eventloop.queue(urlFetchService.fetchAsync(url3), function(res) {
    print("Fetched: " + url3);
});

eventloop.queue(urlFetchService.fetchAsync(url2), function(res) {
    print("Fetched: " + url2);
});


eventloop.queue(asyncDS.put(obj), function() {
    eventloop.queue(asyncDS.get(obj.key), function(obj) {
        print("1: " + obj);
      });
    eventloop.queue(asyncDS.get(obj.key), function(obj) {
        print("2: " + obj);
      });
});


eventloop.run();

helper.tearDown();

java.lang.System.exit(0);
